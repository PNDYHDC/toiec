import { apiClient, authClient } from '../config/httpRequest';

const API_URL = import.meta.env.VITE_API_URL;


// üìå Fetch lessons for courses created by the teacher
export const getMyCreatedLessons = async () => {
    try {
        const response = await authClient.post(`${API_URL}/api/lessons/my-created-lessons`);
        return response.data;
    } catch (error) {
        console.error('L·ªói khi l·∫•y danh s√°ch b√†i h·ªçc:', error);
        throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
    }
};
// üìå L·∫•y danh s√°ch b√†i h·ªçc (c√≥ t√¨m ki·∫øm & ph√¢n trang)
export const getLessons = async () => {
  try {
    const response = await apiClient.get(`${API_URL}/api/lessons/all`);
    return response.data;
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch b√†i h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};

// üìå L·∫•y chi ti·∫øt b√†i h·ªçc
export const getLessonDetail = async (id) => {
  try {
    const response = await apiClient.get(`${API_URL}/api/lessons/${id}/detail`);
    return response.data;
  } catch (error) {
    console.error('L·ªói khi l·∫•y chi ti·∫øt b√†i h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};

// üìå Th√™m b√†i h·ªçc (y√™u c·∫ßu quy·ªÅn admin)
export const addLesson = async (lessonData) => {
  try {
    const response = await authClient.post(`${API_URL}/api/lessons/add`, lessonData);
    return response.data;
  } catch (error) {
    console.error('L·ªói khi th√™m b√†i h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};

// üìå C·∫≠p nh·∫≠t b√†i h·ªçc (y√™u c·∫ßu quy·ªÅn admin)
export const updateLesson = async (id, lessonData) => {
  try {
    const response = await authClient.put(`${API_URL}/api/lessons/${id}/update`, lessonData);
    return response.data;
  } catch (error) {
    console.error('L·ªói khi c·∫≠p nh·∫≠t b√†i h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};

// üìå X√≥a b√†i h·ªçc (y√™u c·∫ßu quy·ªÅn admin)
export const deleteLesson = async (id) => {
  try {
    const response = await authClient.delete(`${API_URL}/api/lessons/${id}/delete`);
    return response.data;
  } catch (error) {
    console.error('L·ªói khi x√≥a b√†i h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};

// üìå L·∫•y danh s√°ch b√†i h·ªçc theo course_id (c√≥ ph√¢n trang & t√¨m ki·∫øm)
export const getLessonsByCourse = async (courseId, { search = '', page = 1, limit = 10 } = {}) => {
  try {
    const response = await apiClient.get(`${API_URL}/api/lessons/by-course/${courseId}`, {
      params: { search, page, limit },
    });
    return response.data;
  } catch (error) {
    console.error('L·ªói khi l·∫•y danh s√°ch b√†i h·ªçc theo kh√≥a h·ªçc:', error);
    throw error.response?.data || { status: false, message: 'ƒê√£ x·∫£y ra l·ªói khi g·ªçi API' };
  }
};