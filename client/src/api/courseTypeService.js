import { apiClient, authClient } from '../config/httpRequest';

const API_URL = import.meta.env.VITE_API_URL;

/**
 * üìå L·∫•y danh s√°ch t·∫•t c·∫£ lo·∫°i kh√≥a h·ªçc
 * Kh√¥ng c·∫ßn truy·ªÅn d·ªØ li·ªáu ƒë·∫ßu v√†o
 * @returns {Array} - M·∫£ng c√°c lo·∫°i kh√≥a h·ªçc
 */
export const fetchCourseTypes = async () => {
  try {
    const response = await authClient.get(`${API_URL}/api/course-types`);
    console.log('fetchCourseTypes Response:', response.data); // Debug
    // X·ª≠ l√Ω c√°c ƒë·ªãnh d·∫°ng response kh√°c nhau
    if (Array.isArray(response.data)) {
      return response.data; // Tr·∫£ v·ªÅ m·∫£ng tr·ª±c ti·∫øp
    } else if (response.data && Array.isArray(response.data.data)) {
      return response.data.data; // Tr·∫£ v·ªÅ m·∫£ng t·ª´ response.data.data
    } else if (response.data && typeof response.data === 'object') {
      return [response.data]; // Chuy·ªÉn object ƒë∆°n l·∫ª th√†nh m·∫£ng
    }
    return []; // Tr·∫£ v·ªÅ m·∫£ng r·ªóng n·∫øu kh√¥ng c√≥ d·ªØ li·ªáu h·ª£p l·ªá
  } catch (error) {
    console.error('fetchCourseTypes Error:', error);
    throw new Error(error.response?.data?.message || 'L·ªói khi l·∫•y danh s√°ch lo·∫°i kh√≥a h·ªçc');
  }
};

/**
 * üìå L·∫•y th√¥ng tin lo·∫°i kh√≥a h·ªçc theo ID
 * @param {string} id - ID c·ªßa lo·∫°i kh√≥a h·ªçc
 */
export const fetchCourseTypeById = async (id) => {
  try {
    const response = await authClient.get(`${API_URL}/api/course-types/${id}`);
    return response.data;
  } catch (error) {
    console.error('fetchCourseTypeById Error:', error);
    throw new Error(error.response?.data?.message || 'L·ªói khi l·∫•y th√¥ng tin lo·∫°i kh√≥a h·ªçc');
  }
};

/**
 * üìå T·∫°o lo·∫°i kh√≥a h·ªçc m·ªõi
 * @param {Object} data - D·ªØ li·ªáu c·∫ßn truy·ªÅn khi t·∫°o
 * @param {string} data.name - T√™n lo·∫°i kh√≥a h·ªçc (b·∫Øt bu·ªôc)
 */
export const createCourseType = async (data) => {
  try {
    const response = await authClient.post(`${API_URL}/api/course-types/add`, data);
    return response.data;
  } catch (error) {
    console.error('createCourseType Error:', error);
    throw new Error(error.response?.data?.message || 'L·ªói khi t·∫°o lo·∫°i kh√≥a h·ªçc');
  }
};

/**
 * üìå C·∫≠p nh·∫≠t lo·∫°i kh√≥a h·ªçc theo ID
 * @param {string} id - ID c·ªßa lo·∫°i kh√≥a h·ªçc c·∫ßn c·∫≠p nh·∫≠t
 * @param {Object} data - D·ªØ li·ªáu c·∫≠p nh·∫≠t
 * @param {string} data.name - T√™n m·ªõi c·ªßa lo·∫°i kh√≥a h·ªçc
 */
export const updateCourseType = async (id, data) => {
  try {
    const response = await authClient.put(`${API_URL}/api/course-types/${id}`, data);
    return response.data;
  } catch (error) {
    console.error('updateCourseType Error:', error);
    throw new Error(error.response?.data?.message || 'L·ªói khi c·∫≠p nh·∫≠t lo·∫°i kh√≥a h·ªçc');
  }
};

/**
 * üìå X√≥a lo·∫°i kh√≥a h·ªçc theo ID
 * @param {string} id - ID c·ªßa lo·∫°i kh√≥a h·ªçc c·∫ßn x√≥a
 */
export const deleteCourseType = async (id) => {
  try {
    const response = await authClient.delete(`${API_URL}/api/course-types/${id}`);
    return response.data;
  } catch (error) {
    console.error('deleteCourseType Error:', error);
    throw new Error(error.response?.data?.message || 'L·ªói khi x√≥a lo·∫°i kh√≥a h·ªçc');
  }
};